<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>0</y>
      <w>360</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>BinaryTreeNode&lt;Type&gt;
bg=cyan
--

- root: BinaryTreeNode&lt;Type&gt; *
- left: BinaryTreeNode&lt;Type&gt; *
- right: BinaryTreeNode&lt;Type&gt; *

--

+ BinaryTreeNode() : constructor
+ BinaryTreeNode(Type data) : constructor

+ getRoot() : BinaryTreeNode&lt;Type&gt; *
+ getLeft() : BinaryTreeNode&lt;Type&gt; *
+ getRight() : BinaryTreeNode&lt;Type&gt; *

+ setRootNode(BinaryTreeNode&lt;Type&gt; *) : void
+ setLeftNode(BinaryTreeNode&lt;Type&gt; *) : void
+ setRightNode(BinaryTreeNode&lt;Type&gt; *) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>90</y>
      <w>250</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
bg=green
--

#data : Type

--

+ Node() : constructor
+ Node(Type data) : constructor
+ getData() : Type
+ setData(Type data) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>160</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>310</x>
      <y>360</y>
      <w>380</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Tree&lt;Type&gt;
bg=pink
--

# root: BinaryTreeNode&lt;Type&gt; 

--

*Informational Methods*
+ getSize() : int
+ getHeight() : int
+ isComplete() : bool
+ isBalanced() : bool

*Data Methods*
+ insert(Type) : void
+ contains(Type) : bool
+ remove(Type) : void

*Traversals*
+ inOrderTraversal() : void
+ preOrderTraversal() : void
+ PostOrderTraversal() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>370</y>
      <w>790</w>
      <h>670</h>
    </coordinates>
    <panel_attributes>BinarySearchTree&lt;Type&gt;
bg=gray
-
*Structure*
+ BinarySearchTree() : Constructor
+ ~BinarySearchTree() : Destructor

*Informational Methods*
# getSize() : int
# getHeight() : int
# isComplete() : bool
# isBalanced() : bool

*Recursive Information Helpers*
# calculateSize(BinaryTreeNodes&lt;Type&gt; * startNode) : int
# calculateHeight(BinaryTreeNodes&lt;Type&gt; * startNode) : int
# isBalanced(BinaryTreeNodes&lt;Type&gt; * startNode) : bool
# isComplete(BinaryTreeNodes&lt;Type&gt; * startNode, int index, int size) : bool

*Data Methods*
+ insert(Type) : void
+ contains(Type) : bool
+ remove(Type) : void

*Recursive Data Helpers*
#removeNode(BinaryTreeNodes&lt;Type&gt; * removeMe) : void

*Traversals*
+ inOrderTraversal : void
+ preOrderTraversal : void
+ postOrderTraversal : void

*Recursive Traversal Helpers*
# inOrderTraversal(BinaryTreeNodes&lt;Type&gt; * inStart) : void
# preOrderTraversal(BinaryTreeNodes&lt;Type&gt; * preStart) : void
# postOrderTraversal(BinaryTreeNodes&lt;Type&gt; * postStart) : void
# getRightMostChild(BinaryTreeNodes&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *
# getLeftMostChild(BinaryTreeNodes&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
